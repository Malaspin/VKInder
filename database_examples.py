#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö VKinder Bot
–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å PostgreSQL
"""

import sys
import os
from typing import Optional, List, Dict, Any

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º API –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
from db_api import *


def example_basic_usage():
    """–ë–∞–∑–æ–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API"""
    print("üîß –ë–ê–ó–û–í–´–ï –ü–†–ò–ú–ï–†–´ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø")
    print("=" * 50)
    
    # 1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    print("\n1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î...")
    if test_database():
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
        return
    
    # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ë–î
    print("\n2. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    info = get_database_info()
    print(f"üìä –í—Å–µ–≥–æ —Ç–∞–±–ª–∏—Ü: {info.get('total_tables', 0)}")
    for table_name, table_info in info.get('tables', {}).items():
        print(f"  - {table_name}: {table_info['count']} –∑–∞–ø–∏—Å–µ–π")


def example_user_management():
    """–ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"""
    print("\n\nüë• –£–ü–†–ê–í–õ–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–ú–ò")
    print("=" * 50)
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n1. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    user_id = 100001
    success = add_user(
        vk_user_id=user_id,
        first_name="–ê–ª–µ–∫—Å–µ–π",
        last_name="–ü–µ—Ç—Ä–æ–≤",
        age=28,
        sex=2,  # 1 - –∂–µ–Ω—Å–∫–∏–π, 2 - –º—É–∂—Å–∫–æ–π
        city="–ú–æ—Å–∫–≤–∞",
        country="–†–æ—Å—Å–∏—è",
        photo_url="https://example.com/photo.jpg"
    )
    
    if success:
        print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    user = get_user(user_id)
    if user:
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω: {user['first_name']} {user['last_name']}")
        print(f"   –í–æ–∑—Ä–∞—Å—Ç: {user['age']}, –ì–æ—Ä–æ–¥: {user['city']}")
    else:
        print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    update_success = update_user(user_id, age=29, city="–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥")
    if update_success:
        print("‚úÖ –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        updated_user = get_user(user_id)
        if updated_user:
            print(f"   –ù–æ–≤—ã–π –≤–æ–∑—Ä–∞—Å—Ç: {updated_user['age']}")
            print(f"   –ù–æ–≤—ã–π –≥–æ—Ä–æ–¥: {updated_user['city']}")


def example_logging():
    """–ü—Ä–∏–º–µ—Ä—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("\n\nüìù –°–ò–°–¢–ï–ú–ê –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 50)
    
    user_id = 100001
    
    # –†–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –ª–æ–≥–æ–≤
    print("\n1. –ó–∞–ø–∏—Å—å —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ª–æ–≥–æ–≤...")
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏ (user_id = 0)
    log_info("–°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞")
    log_debug("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª–µ–π")
    log_warning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –Ω–∏–∑–∫–æ–º —É—Ä–æ–≤–Ω–µ –ø–∞–º—è—Ç–∏")
    log_error("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
    
    # –õ–æ–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    log_info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à–µ–ª –≤ –±–æ—Ç–∞", user_id)
    log_debug("–ù–∞—á–∞–ª–æ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", user_id)
    log_info("–ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ", user_id)
    log_error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π", user_id)
    
    print("‚úÖ –õ–æ–≥–∏ –∑–∞–ø–∏—Å–∞–Ω—ã")
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–≥–æ–≤
    print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–≥–æ–≤...")
    
    # –í—Å–µ –ª–æ–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_logs = get_logs(user_id=user_id, limit=5)
    print(f"üìã –õ–æ–≥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {len(user_logs)}")
    for log in user_logs:
        print(f"  [{log['log_level'].upper()}] {log['log_message']}")
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏
    system_logs = get_logs(user_id=0, limit=3)
    print(f"\nüìã –°–∏—Å—Ç–µ–º–Ω—ã—Ö –ª–æ–≥–æ–≤: {len(system_logs)}")
    for log in system_logs:
        print(f"  [{log['log_level'].upper()}] {log['log_message']}")
    
    # –õ–æ–≥–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è
    error_logs = get_logs(level="error", limit=3)
    print(f"\nüìã –õ–æ–≥–æ–≤ –æ—à–∏–±–æ–∫: {len(error_logs)}")
    for log in error_logs:
        print(f"  [{log['log_level'].upper()}] {log['log_message']}")


def example_messages():
    """–ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç—ã —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏"""
    print("\n\nüí¨ –°–ò–°–¢–ï–ú–ê –°–û–û–ë–©–ï–ù–ò–ô")
    print("=" * 50)
    
    user_id = 100001
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    print("\n1. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...")
    
    # –ö–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    add_message(user_id, "command", "/start")
    add_message(user_id, "command", "/help")
    add_message(user_id, "command", "/search")
    
    # –û—Ç–≤–µ—Ç—ã –±–æ—Ç–∞
    add_message(user_id, "response", "–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VKinder Bot!")
    add_message(user_id, "response", "–í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:")
    add_message(user_id, "response", "–ù–∞—á–∏–Ω–∞—é –ø–æ–∏—Å–∫ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    # –û—à–∏–±–∫–∏
    add_message(user_id, "error", "–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏")
    
    print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω—ã")
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    messages = get_user_messages(user_id, limit=10)
    print(f"üìã –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(messages)}")
    
    for msg in messages:
        print(f"  [{msg['message_type'].upper()}] {msg['message_text']}")
        print(f"    –í—Ä–µ–º—è: {msg['sent_at']}")


def example_favorites():
    """–ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç—ã —Å –∏–∑–±—Ä–∞–Ω–Ω—ã–º"""
    print("\n\n‚ù§Ô∏è –°–ò–°–¢–ï–ú–ê –ò–ó–ë–†–ê–ù–ù–û–ì–û")
    print("=" * 50)
    
    user_id = 100001
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
    print("\n1. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ...")
    favorite_users = [
        {"vk_user_id": 200001, "first_name": "–ê–Ω–Ω–∞", "last_name": "–ò–≤–∞–Ω–æ–≤–∞", "age": 25, "sex": 1, "city": "–ú–æ—Å–∫–≤–∞"},
        {"vk_user_id": 200002, "first_name": "–ú–∞—Ä–∏—è", "last_name": "–°–∏–¥–æ—Ä–æ–≤–∞", "age": 27, "sex": 1, "city": "–°–ü–±"},
        {"vk_user_id": 200003, "first_name": "–ï–ª–µ–Ω–∞", "last_name": "–ö–æ–∑–ª–æ–≤–∞", "age": 26, "sex": 1, "city": "–ö–∞–∑–∞–Ω—å"}
    ]
    
    for fav_user in favorite_users:
        add_user(**fav_user)
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {fav_user['first_name']} {fav_user['last_name']}")
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
    print("\n2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ...")
    for fav_user in favorite_users:
        success = add_favorite(user_id, fav_user['vk_user_id'])
        if success:
            print(f"‚úÖ {fav_user['first_name']} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è {fav_user['first_name']} –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ")
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö
    print("\n3. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö...")
    favorites = get_favorites(user_id)
    print(f"üìã –ò–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(favorites)}")
    
    for fav in favorites:
        print(f"  ID: {fav['favorite_vk_id']}")
        print(f"    –î–æ–±–∞–≤–ª–µ–Ω: {fav['created_at']}")
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
    print("\n4. –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ...")
    if favorites:
        first_favorite = favorites[0]['favorite_vk_id']
        success = remove_favorite(user_id, first_favorite)
        if success:
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {first_favorite} —É–¥–∞–ª–µ–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {first_favorite}")


def example_database_management():
    """–ü—Ä–∏–º–µ—Ä—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    print("\n\nüóÑÔ∏è –£–ü–†–ê–í–õ–ï–ù–ò–ï –ë–ê–ó–û–ô –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ë–î
    print("\n1. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    info = get_database_info()
    print(f"üìä –í—Å–µ–≥–æ —Ç–∞–±–ª–∏—Ü: {info.get('total_tables', 0)}")
    
    for table_name, table_info in info.get('tables', {}).items():
        print(f"  üìÑ {table_name}: {table_info['count']} –∑–∞–ø–∏—Å–µ–π")
    
    # –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ!)
    print("\n2. –û—á–∏—Å—Ç–∫–∞ —Ç–∞–±–ª–∏—Ü—ã (–ø—Ä–∏–º–µ—Ä)...")
    print("‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: —ç—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã!")
    # clear_table("bot_logs")  # –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    print("‚ÑπÔ∏è  –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    print("\n3. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...")
    print("‚ÑπÔ∏è  –¢–∞–±–ª–∏—Ü—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç")


def example_error_handling():
    """–ü—Ä–∏–º–µ—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫"""
    print("\n\n‚ö†Ô∏è –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö")
    print("=" * 50)
    
    # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n1. –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    user = get_user(999999)
    if user is None:
        print("‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
    else:
        print("‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
    
    # –ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    print("\n2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...")
    success = add_user(
        vk_user_id=100002,
        first_name="",  # –ü—É—Å—Ç–æ–µ –∏–º—è
        last_name="–¢–µ—Å—Ç"
    )
    if not success:
        print("‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏")
    else:
        print("‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
    
    # –ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n3. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    success = add_favorite(100001, 999999)
    if not success:
        print("‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: –Ω–∞—Ä—É—à–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–≥–æ –∫–ª—é—á–∞")
    else:
        print("‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")


def example_integration_patterns():
    """–ü—Ä–∏–º–µ—Ä—ã –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –∫–æ–¥–æ–º"""
    print("\n\nüîó –ü–ê–¢–¢–ï–†–ù–´ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò")
    print("=" * 50)
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n1. –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    
    def handle_user_command(user_id: int, command: str):
        """–ü—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã"""
        # –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É
        log_info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤—ã–ø–æ–ª–Ω–∏–ª –∫–æ–º–∞–Ω–¥—É: {command}", user_id)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É
        add_message(user_id, "command", command)
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É
        if command == "/start":
            response = "–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VKinder Bot!"
        elif command == "/help":
            response = "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: /start, /search, /favorites"
        elif command == "/search":
            response = "–ù–∞—á–∏–Ω–∞—é –ø–æ–∏—Å–∫ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π..."
        else:
            response = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
        add_message(user_id, "response", response)
        
        # –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        log_info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}", user_id)
        
        return response
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω
    test_user_id = 100003
    add_user(test_user_id, "–¢–µ—Å—Ç", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", 30, 2, "–ú–æ—Å–∫–≤–∞")
    
    response = handle_user_command(test_user_id, "/start")
    print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: {response}")
    
    response = handle_user_command(test_user_id, "/help")
    print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: {response}")
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω: –ü–æ–∏—Å–∫ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
    print("\n2. –ü–æ–∏—Å–∫ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ...")
    
    def search_and_add_favorite(user_id: int, search_criteria: dict):
        """–ü—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–∏—Å–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"""
        log_info(f"–ù–∞—á–∞–ª–æ –ø–æ–∏—Å–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}", user_id)
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç VK API)
        found_users = [
            {"vk_user_id": 300001, "first_name": "–ù–∞—Ç–∞–ª—å—è", "last_name": "–ü–µ—Ç—Ä–æ–≤–∞", "age": 24, "sex": 1, "city": "–ú–æ—Å–∫–≤–∞"},
            {"vk_user_id": 300002, "first_name": "–û–ª—å–≥–∞", "last_name": "–°–º–∏—Ä–Ω–æ–≤–∞", "age": 26, "sex": 1, "city": "–°–ü–±"}
        ]
        
        log_info(f"–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(found_users)}", user_id)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        for user_data in found_users:
            add_user(**user_data)
            add_favorite(user_id, user_data['vk_user_id'])
            log_info(f"–î–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ: {user_data['first_name']} {user_data['last_name']}", user_id)
        
        return len(found_users)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω
    found_count = search_and_add_favorite(test_user_id, {"age_from": 20, "age_to": 30, "sex": 1})
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ: {found_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏"""
    print("üöÄ –ü–†–ò–ú–ï–†–´ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –ò–ù–¢–ï–†–§–ï–ô–°–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 60)
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –ø—Ä–∏–º–µ—Ä—ã
        example_basic_usage()
        example_user_management()
        example_logging()
        example_messages()
        example_favorites()
        example_database_management()
        example_error_handling()
        example_integration_patterns()
        
        print("\n\n‚úÖ –í–°–ï –ü–†–ò–ú–ï–†–´ –í–´–ü–û–õ–ù–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("=" * 60)
        print("üìñ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: DATABASE_INTERFACE_GUIDE.md")
        print("üîß CLI –∫–æ–º–∞–Ω–¥—ã: python db_cli.py --help")
        print("üìä API —Ñ—É–Ω–∫—Ü–∏–∏: from db_api import *")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ—Ä–æ–≤: {e}")
        log_error(f"–û—à–∏–±–∫–∞ –≤ –ø—Ä–∏–º–µ—Ä–∞—Ö: {e}")


if __name__ == "__main__":
    main()
